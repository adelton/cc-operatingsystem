<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../transforms/esr2html.xsl"?>

<ESR xmlns="http://common-criteria.rhcloud.com/ns/esr" name="Operating System Fundamentals">

	<intro>
		<esrtitle>Operating System Fundamentals</esrtitle>
		<maintainer>National Information Assurance Partnership and Communications-Electronics Security Group</maintainer>
		<identifier>42</identifier>
		<version>0.1</version>
		<status>draft</status>
		<issuedate>1 April 2015</issuedate>
		<approver></approver>
		<supercedes></supercedes>
	</intro>

    <section title="Background and Purpose" id="purpose">
	<!-- This section sets the context for not only the ESR, but what is expected of
	the resulting Protection Profile (PP). The intent is that the remaining
	sections provide succinct statements that highlight the relevant aspects to
	be addressed by the Technical Community (TC) constructing the PP. Here, the
	authors provide a narrative that introduces the reader to the problem being
	solved, and presents key aspects that support or guide the TC, and may
	elaborate on subtleties not apparent in the “bulleted” high level
	statements.-->
	An operating system is software that manages computer hardware and software
	resources and provides common services for application programs.  The hardware
	it manages may be physical or virtual.
	<p/>
	The document describes the high-level security requirements for a
	general-purpose operating system (OS).  The requirements are targeted at
	mitigating well-defined threats.  Furthermore, the ESR establishes a scope
	that informs development of the requirements, based on use cases and
	environmental assumptions.  In addition to stating what properties an OS
	must minimally exhibit, the ESR also describes functionality that vendors
	should consider as extensions that go beyond the expected minimal
	baseline. 
	<p/>
	This scoping enables delivery of an effective set of security functional
	requirements in the PP, as well as the evaluation activities
	performed during the course of evaluation. It ensures that
	objective and repeatable evaluation activities can be captured in the PP
	while still delivering a PP in a timely manner. Another factor is to
	ensure that the security functionality prescribed is realistic and 
	can be achieved by commercially-available products. Finally, the 
	evaluation must be able to be executed in a manner that tracks
	with industry's release of operating system products.
	</section>

    <section title="Use Cases" id="usecases">
      <p> 
	The OS is installed on a platform to apportion platform resources among applications.
	This includes several use cases in which the OS acts as a platform for applications:
	<ul>
	<li>End user system such as a desktop or laptop, which is optionally bound to a directory server or management server</li>
	<li>Server system, running on physical or virtual hardware</li>
	<li>Cloud system, running on virtual hardware</li>
	</ul>
      </p>
	<!-- <i>This section is intended to provide the initial scope/bound of the security -->
	<!-- problem by providing the reader with concise statements regarding the -->
	<!-- scenarios in which the technology is being used. The intended usage -->
	<!-- presented here should lay the groundwork for the identifying the resources -->
	<!-- to be protected, and what threats must be considered in the drafting of the -->
	<!-- Essential Security Requirements (ESR) and for the TC to consider when -->
	<!-- writing the PP.  </i> -->
	</section>

    <section title="Resources to be protected" id="resourcesprotected">
      <p>
	Platform resources that are managed by the OS to include network interfaces.
	Sensitive data that by necessity must be stored in non-volatile memory, whether owned by the application or consumed from the Operational Environment.
	All resources that compromise the OS itself.
      </p>
	<!-- <i>This section is intended to provide the initial scope/bound of the security -->
	<!-- problem by providing the reader with concise statements regarding the -->
	<!-- scenarios in which the technology is being used. The intended usage -->
	<!-- presented here should lay the groundwork for the identifying the resources -->
	<!-- to be protected, and what threats must be considered in the drafting of the -->
	<!-- Essential Security Requirements (ESR) and for the TC to consider when -->
	<!-- writing the PP.  </i> -->
	</section>

    <section title="Attacker access" id="attackeraccess">
      <ul>
	<li>An attacker has an arbitrary amount of time to analyze the behavior of the OS, its interaction with its platform, and the data it transmits over the network.</li>

	<li> An attacker is able to acquire their own copy of the target OS and study its behavior on a platform that they own.</li>
      </ul>

    </section>

    <section title="Essential Security Requirements" id="requirements">
      <!--
        <i>This is where the authors present an initial set of English requirements
	that specify security functionality, rather than design and/or
	implementation characteristics. These requirements will provide the
	foundation for which the detailed set of requirements is derived. It is
	important that the requirements captured here make an attempt to fully
	address the categories (e.g., access control, identification and
	authentication, management capabilities, roles of administration, secure
	communications, and audit). That's not to say the requirements are fully
	specified or detailed enough to simply translate to Common Criteria
	security functional requirements. The goal is that there is enough
	information contained here, as well as the other sections of this document,
	to provide the TC enough information to ensure they have an understanding
	of what is minimally required in breath. </i>
-->


	<p>
	  The following are the essential security requirements that are expected 
	  to be implemented by any operating system that is compliant with the 
	  General Purpose Operating System PP. 
	</p>

	<p>The Operating System shall:
	<ul>
	  <li>
	    implement best-practice anti-exploitation features to include ASLR, 
	    Stack Canaries/Cookies, and Data Execution Protection to protect 
	    itself and its applications.
	  </li>
	  <li>
	    provide the following cryptographic services:
	    <ul>
	      <li>Asymmetric key generation</li>
	      <li>Symmetric key encryption and decryption </li>
	      <li>Deterministic random bit generation (DRBG)</li>
	      <li>Cryptographic hashing </li>
	      <li>Cryptographic signing</li>
	      <li>Keyed-hash message authentication</li>
	      <li>TLS support</li>
	    </ul>
	  </li>
	  <li>
	    provide a trusted update mechanism to update itself, applications, and,
	    optionally, firmware for the platform it runs on.
	  </li>
	  <li>
	    provide strong authentication mechanisms.
	  </li>
	  <li>
	    leverage trusted or secure boot process.
	  </li>
	  <li>
	    use good auditing and provide mechanism for secure transmission of audit data.
	  </li>
	  <li>
	    provide mechanisms for management by user, enterprise, or other.
	  </li>
	</ul>
	</p>
	</section>

    <section title="Assumptions" id="assumptions">
	<!--Simply put, this section presents the aspects of the product and its
	intended environment that can be assumed to hold true. This will provide
	additional scope on the resulting PP. -->
	The following assumptions are made for the operating system product and
	its operational environmental:
	<ul>
        <li> The platform is physically protected. The hardware that the OS 
	manages is secured by an adequate number of defensive measures that make physical
	attacks impractical.
	</li>
	<li>The OS implements some security-relevant functionality which does
	not require evaluation. Examples include network time synchronization, process scheduling, and virtual
	memory management (to include process separation).
	</li>
	<li>The capability of the OS to be managed by the enterprise is optional.
	Enterprise management does not increase or decrease overall risk exposure.
	Enterprise management, if supported, represents an operational choice.
	</li>
	<li>The capability of the OS to bind to directory services is optional.
	Binding to directory services does not increase or decrease overall risk
	exposure.  Binding to directory services, if supported, represents an
	operational choice.  When it is not bound to directory services, the OS
	provides login for only a single user, or a very limited number of users.
	</li>
	<li>The OS runs application software developed by a third-party.
	The applications are not intentionally developed to be malicious, but can
	contain inadvertent coding errors.
	</li>
	<li>The platform is connected to a network. 
	For purposes of sending/receiving data, to include software updates, 
	the platform is connected to other entities.
	Other entities on the network are not inherently trustable.
	</li>

	<li>Administrators are not malicious in nature.</li>
	<li>Users are not malicious in nature.</li>
	</ul>
	</section>


    <section title="Optional Extensions (optional)" id="extensions">
	Additional security functionality that may be appropriate for some
	use cases, and can be expressed in extensions to this document, includes:
	<ul>
	<li>Multi-level Security (MLS) access controls</li>
	<li>Attestation of security measurements</li>
	<li>Data-at-rest protection - already covered in other PPs</li>
	<li>IPSec VPNs - already covered in other PPs</li>
	</ul>
	</section>

    <section title="Outside the TOE's Scope (optional)" id="outsidescope">
	This is where the authors explicitly state things they do not want to be
	considered for inclusion in an evaluation against a resulting PP.  Items
	expressed here could include threats, functions or capabilities that would
	require assurance activities that are too subjective, or specific expertise
	not available in the evaluation facilities expected to assess products
	against the PP (e.g., assessing anti-tamper measures).
	</section>

</ESR>
